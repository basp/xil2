//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\Joy.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="JoyParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
public interface IJoyVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.cycle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCycle([NotNull] JoyParser.CycleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.simpleDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleDefinition([NotNull] JoyParser.SimpleDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] JoyParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] JoyParser.FactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.setLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetLiteral([NotNull] JoyParser.SetLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.quotationLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuotationLiteral([NotNull] JoyParser.QuotationLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.atomicSymbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtomicSymbol([NotNull] JoyParser.AtomicSymbolContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.booleanConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanConstant([NotNull] JoyParser.BooleanConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.integerConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerConstant([NotNull] JoyParser.IntegerConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.floatConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatConstant([NotNull] JoyParser.FloatConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.characterConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharacterConstant([NotNull] JoyParser.CharacterConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JoyParser.stringConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringConstant([NotNull] JoyParser.StringConstantContext context);
}
